openapi: 3.0.0
info:
  title: Стажировка
  version: 1.0.0
servers:
  - url: http:/127.0.0.1:8000/api/documentation
paths:

  /api/users:
    get:
      tags:
        - Users
      summary: Get users
      parameters:
        - name: limit
          in: query
          required: true
          description: limit
          schema:
            type: integer
            example: 1

        - name: offset
          in: query
          required: true
          description: offset
          schema:
            type: integer
            example: 1

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Users"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    patch:
      summary: Update username and\or avatar
      tags:
        - Users
      requestBody:
        required: false
        description: Username and\or avatar

        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                avatar:
                  format: binary
                  type: string

      responses:
        '200':
          description: Updated user name and\or avatar
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable entity

  /api/users/{user}:
    get:
      summary: Get user by id
      tags:
        - Users
      parameters:
        - name: user
          in: path
          required: true
          description: user id
          schema:
            type: integer

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

        '404':
          description: Not Found
        '401':
          description: Unauthorized

    delete:
      summary: Delete user by id
      tags:
        - Users
      parameters:
        - name: user
          in: path
          required: true
          description: user id
          schema:
            type: integer

      responses:
        '200':
          description: OK
        '404':
          description: Not found
        '403':
          description: Forbidden
        '401':
          description: Unauthorized

  /api/auth/register:
    post:
      summary: Registration user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                avatar:
                  format: binary
                  type: string

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '422':
          description: Unprocessable entity

  /api/auth/login:
    post:
      summary: login
      tags:
        - Auth
      requestBody:
        required: true
        description: login user
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessLogin"
        '422':
          description: Unprocessable entity

  /api/password/forgot:
    post:
      summary: Forgot user password
      tags:
        - Password
      requestBody:
        required: true
        description: User email
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string

      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable entity

  /api/password/reset:
    post:
      summary: Reset user password
      tags:
        - Password
      requestBody:
        required: true
        description: request to reset user password
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                token:
                  type: string
                password:
                  type: string
                password_confirm:
                  type: string
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable entity

  /api/organizations:
    get:
      summary: Get All organizations
      tags:
        - Organizations

      parameters:
        - name: limit
          in: query
          required: true
          description: limit
          schema:
            type: integer
            example: 1

        - name: offset
          in: query
          required: true
          description: offset
          schema:
            type: integer
            example: 1

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Organizations"
        '403':
          description: Forbidden
        '401':
          description: Unauthorized

    post:
      summary: Create organization
      tags:
        - Organizations

      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        '403':
          description: Forbidden
        '422':
          description: Unprocessable entity
        '401':
          description: Unauthorized

  /api/organizations/{organization}:
    get:
      summary: get organization by id
      tags:
        - Organizations

      parameters:
        - name: organization
          in: path
          required: true
          description: organization id
          schema:
            type: integer

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"

        '404':
          description: Not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    patch:
      summary: Update organization by id
      tags:
        - Organizations

      parameters:
        - name: organization
          in: path
          required: true
          description: id организации
          schema:
            type: integer

      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"

        '403':
          description: Forbidden
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable entity

    delete:
      summary: Delete organization by id
      tags:
        - Organizations

      parameters:
        - name: organization
          in: path
          required: true
          description: organization id
          schema:
            type: integer

      responses:
        '200':
          description: OK
        '404':
          description: Not found
        '403':
          description: Forbidden
        '401':
          description: Unauthorized

  /api/invites/send/organization:
    post:
      summary: Send organization invite
      tags:
        - Invites
      operationId: SendInvite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                organization_id:
                  type: integer

      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable entity
        '403':
          description: Forbidden

  /api/invites/accept/organization/{token}:
    get:
      summary: Accept organization invite
      tags:
      - Invites
      operationId: AcceptInvite
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string

      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
        '401':
          description: Unauthorized

  /api/projects:
    get:
      summary: Get projects
      tags:
        - Projects
      parameters:
        - name: limit
          in: query
          required: true
          description: limit
          schema:
            type: integer
            example: 1
        - name: offset
          in: query
          required: true
          description: offset
          schema:
            type: integer
            example: 1

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Projects"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    post:
      summary: Create project

      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                organization_id:
                  type: integer

      tags:
        - Projects
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        '422':
          description: Unprocessable entity
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/projects/find-by-organization/{organization}:
    get:
      summary: find project by organization id
      tags:
        - Projects

      operationId: GetProjectsbyOrganizationId

      parameters:
        - name: organization
          in: path
          required: true
          description: organization id
          schema:
            type: integer

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"

        '404':
          description: Not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/projects/{project}:
    get:
      summary: get project by id
      tags:
        - Projects

      parameters:
        - name: project
          in: path
          required: true
          description: project id
          schema:
            type: integer

      responses:
        '200':
          description: OK
        '404':
          description: Not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    patch:
      summary: Update project
      tags:
        - Projects

      parameters:
        - name: project
          in: path
          required: true
          description: project id
          schema:
            type: integer

      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        '404':
          description: Not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    delete:
      summary: Delete project by id
      tags:
        - Projects

      parameters:
        - name: project
          in: path
          required: true
          description: project id
          schema:
            type: integer

      responses:
        '200':
          description: OK
        '404':
          description: Not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/invites/send/project:
    post:
      summary: Send project invite
      tags:
        - Invites

      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                project_id:
                  type: integer

      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable entity
        '403':
          description: Forbidden
        '401':
          description: Unauthorized

  /api/invites/accept/project/{token}:
    get:
      summary: Accept invite project
      tags:
      - Invites

      parameters:
        - name: token
          in: path
          required: true
          description: Токен который находится в ссылке для приглашения
          schema:
            type: string

      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
        '401':
          description: Unauthorized

  /api/board-templates:
    get:
      summary: Get board templates
      tags:
        - BoardTemplates
      parameters:
        - name: limit
          in: query
          required: true
          description: limit
          schema:
            type: integer
            example: 1

        - name: offset
          in: query
          required: true
          description: offset
          schema:
            type: integer
            example: 1

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/BoardTemplates"
        '401':
          description: Unauthorized

    post:
      summary: Create board template
      requestBody:
        required: true
        description: request to add new board template
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                organization_id:
                  type: integer

      tags:
        - BoardTemplates
      responses:
        '201':
          description: Creatd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardTemplate"
        '422':
          description: Unprocessable entity
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/board-templates/{boardTemplate}:
    get:
      summary: get board template by id
      tags:
        - BoardTemplates

      parameters:
        - name: boardTemplate
          in: path
          required: true
          description: board template id
          schema:
            type: integer

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardTemplate"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    put:
      summary: Update board template by id
      tags:
        - BoardTemplates

      parameters:
        - name: boardTemplate
          in: path
          required: true
          description: board template id
          schema:
            type: integer

      requestBody:
        required: true
        description: request to update board template
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardTemplate"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable entity

    delete:
      summary: Delete board template
      tags:
        - BoardTemplates

      parameters:
        - name: boardTemplate
          in: path
          required: true
          description: board template id
          schema:
            type: integer

      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/task-templates/:
    get:
      summary: Get task templates
      tags:
        - TaskTemplates

      parameters:
        - name: limit
          in: query
          required: true
          description: limit
          schema:
            type: integer

        - name: offset
          in: query
          required: true
          description: offset
          schema:
            type: integer

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/TaskTemplates"
        '401':
          description: Unauthorized

    post:
      summary: Create task template
      tags:
        - TaskTemplates
      requestBody:
        required: true
        description: request to update board template
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                board_template_id:
                  type: integer

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskTemplate"
        '422':
          description: Unprocessable entity
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/task-templates/{taskTemplate}:
    get:
      summary: Find task template by id
      tags:
        - TaskTemplates

      parameters:
        - name: taskTemplate
          in: path
          required: true
          description: task template id
          schema:
            type: integer

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskTemplate"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    put:
      summary: Update task template
      tags:
        - TaskTemplates

      parameters:
        - name: taskTemplate
          in: path
          required: true
          description: task template id
          schema:
            type: integer

      requestBody:
        required: true
        description: request for update task template
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskTemplate"

        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    delete:
      summary: Delete task template by id
      tags:
        - TaskTemplates
      parameters:
        - name: taskTemplate
          in: path
          required: true
          description: task template id
          schema:
            type: integer

      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/subtask-templates:
    post:
      summary: Create subtask template
      tags:
        - SubtaskTemplates

      requestBody:
        required: true
        description: request for update task template
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                task_template_id:
                  type: integer

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubtaskTemplate"

        '422':
          description: Unprocessable entity
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/subtask-templates/{subtaskTemplate}:
    get:
      summary: get subtask template by id
      tags:
        - SubtaskTemplates

      parameters:
        - name: subtaskTemplate
          in: path
          required: true
          description: subtask template id
          schema:
            type: integer

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubtaskTemplate"
        '401':
          description: Unauthorized

    put:
      summary: Update subtask template
      tags:
        - SubtaskTemplates

      parameters:
        - name: subtaskTemplate
          in: path
          required: true
          description: subtask template id
          schema:
            type: integer

      requestBody:
        required: false
        description: request for update subtask template
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                task_template_id:
                  type: integer

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubtaskTemplate"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    delete:
      summary: Delete subtask template by id
      tags:
        - SubtaskTemplates

      parameters:
        - name: subtaskTemplate
          in: path
          required: true
          description: subtask template id
          schema:
            type: integer

      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/subtask-templates/{subtaskTemplate}/attribute:
    post:
      summary: Add attribute to subtask template
      tags:
        - SubtaskTemplates
      parameters:
        - name: subtaskTemplate
          in: path
          required: true
          description: subtask template id
          schema:
            type: integer

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_template_id:
                  type: integer
                attribute_id:
                  type: integer
                value:
                  type: string

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubtaskAttributeTemplate"

        '422':
          description: Unprocessable entity
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/subtask-templates/{subtaskTemplate}/attribute/{attribute}:
    put:
      summary: Update subtask attrubute
      tags:
        - SubtaskTemplates

      parameters:
        - name: subtaskTemplate
          in: path
          required: true
          description: subtask template id
          schema:
            type: integer
        - name: attribute
          in: path
          required: true
          description: attribute id
          schema:
            type: integer

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_template_id:
                  type: integer
                attribute_id:
                  type: integer
                value:
                  type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubtaskAttributeTemplate"

        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    delete:
      summary: Delete subtask attribute
      tags:
        - SubtaskTemplates

      parameters:
        - name: subtaskTemplate
          in: path
          required: true
          description: subtask template id
          schema:
            type: integer
        - name: attribute
          in: path
          required: true
          description: attribute id
          schema:
            type: integer

      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden


components:
  schemas:

    User:
      type: object
      required:
        - name
        - email

      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        avatar:
          type: string

    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"

    Organization:
      type: object
      required:
        - id

      properties:
        id:
          type: integer
        name:
          type: string

    Organizations:
      type: array
      items:
        $ref: "#/components/schemas/Organization"

    Project:
      type: object
      required:
        - id
        - organization_id

      properties:
        id:
          type: integer
        name:
          type: string
        organization_id:
          type: integer

    Projects:
      type: array
      items:
        $ref: "#/components/schemas/Project"

    BoardTemplate:
      type: object
      required:
        - name

      properties:

        id:
          type: integer
        name:
          type: string

    BoardTemplates:
      type: array
      items:
        $ref: "#/components/schemas/BoardTemplate"

    TaskTemplate:
      type: object
      required:
        - name
        - board_template_id

      properties:

        id:
          type: integer
        name:
          type: string
        board_template_id:
          type: integer

    TaskTemplates:
      type: array
      items:
        $ref: "#/components/schemas/BoardTemplate"

    SubtaskTemplate:
      type: object
      required:
        - name
        - task_template_id

      properties:

        id:
          type: integer
        name:
          type: string
        task_template_id:
          type: integer

    SubtaskAttributeTemplate:
      type: object
      required:
        - task_template_id
        - attribute_template_id
        - value

      properties:
        id:
          type: integer
        task_template_id:
          type: integer
        attribute_id:
          type: integer
        value:
          type: string

    AccessLogin:
      type: object

      properties:
        message:
          type: string
        id:
          type: integer
        token:
          type: string








































