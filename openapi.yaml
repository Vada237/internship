openapi: 3.0.0
info: 
  title: Стажировка
  version: 1.0.0
servers:
  - url: http:/127.0.0.1:8000/api/documentation
paths:
  
  /api/users:
    get: 
      summary: Получение пользователей
      operationId: GetAllUsers
      parameters:
        - name: limit
          in: query
          required: true
          description: Количество пользователей
          schema:
            type: integer
            example: 1
            
        - name: offset
          in: query
          required: true
          description: Игнорирование пользователей
          schema:
            type: integer
            example: 1
            
      tags: 
        - Users
      responses:
        '200':
          description: Успешный вывод всех пользователей
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
                
    
    patch:
      summary: Обновление имени и\или аватара пользователя
      tags:
        - Users
      operationId: UpdateUserAvatarAndNameById
      requestBody:
        required: false
        description: Имя пользователя и\или аватар
        content:
          application/json:
            schema:
              type: string
            example:
              name: denis
              avatar: zgskmYPxeL5CE0SF9d3AxNkOPjy2KW3lMyJqBENy.png
        
      responses:
        '200':
          description: Имя и\или аватар изменен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
                  
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorize"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
          
        '422':
          description: Некорректные данные 
            
  /api/users/{user}:
    get: 
      summary: Получение пользователя по id
      tags:
        - Users
      operationId: GetUserById
      parameters:
        - name: user
          in: path
          required: true
          description: id пользователя
          schema:
            type: integer
          
      responses:
        '200':
          description: Пользователь найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
                
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
  
    delete:
      summary: Удаление пользователя по id
      tags:
        - Users
      operationId: DeleteUserById
      parameters:
        - name: user
          in: path
          required: true
          description: id пользователя
          schema:
            type: integer
            
      responses:
        '200':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
                  
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
  
  /api/auth/register:
    post: 
      summary: Регистрация пользователя
      tags:
        - Auth
      operationId: RegisterUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
              
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        
        '422':
          description: Некорректный email/password или пользователь с таким email существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntity"
  
  /api/auth/login:
    post: 
      summary: Авторизация пользователя
      tags:
        - Auth
      operationId: LoginUser
      requestBody:
        required: true
        description: Email и пароль
        content:
          application/json:
            schema:
              type: string
            example:
              email: user@example.com
              password: password123
      responses:
        '200':
          description: Пользователь успешно авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessLogin"
        
        '422':
          description: Некорректный email/password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntity"
  
  /api/password/forgot:
    post:
      summary: Восстановление пароля пользователя
      tags:
        - Password
      operationId: ForgotPassword
      requestBody:
        required: true
        description: Email пользователя
        content:
          application/json:
            schema:
              type: string
            example:
              email: user@example.com
      responses:
        '200':
          description: Ссылка для сброса пароля отправлена на почту
        
        '422':
          description: Некорректный email
  
  /api/password/reset:
    post:
      summary: Сброс пароля пользователя
      tags:
        - Password
      operationId: ResetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPassword"
      responses:
        '200':
          description: Пароль успешно сброшен
        '422':
          description: Некорректные данные
          
  /api/organizations:
    get:
      summary: Получение организаций
      operationId: GetAllOrganizations
      tags: 
        - Organizations
        
      parameters:
        - name: limit
          in: query
          required: true
          description: Количество организаций
          schema:
            type: integer
            example: 1
            
        - name: offset
          in: query
          required: true
          description: Игнорирование организаций
          schema:
            type: integer
            example: 1
            
      responses:
        '200':
          description: Успешный вывод всех организаций
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Organizations"
        '403':
          description: Пользователь не имеет конкретных ролей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
          
    post:
      summary: Создание организации
      tags:
        - Organizations
      operationId: CreateOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
    
      responses:
        '201':
          description: Организация создана
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
                
        '422':
          description: Некорректное название
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntity"
                  
  /api/organizations/{organization}:
    get:
      summary: Поиск организации по id
      tags: 
        - Organizations
      
      operationId: GetOrganizationbyId
      
      parameters:
        - name: organization
          in: path
          required: true
          description: id организации
          schema:
            type: integer
            
      responses:
        '200':
          description: Получение организации
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
                
        '404':
          description: Организация не найдена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
                
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorize"
        '403':
          description: Пользователь не имеет конкретных ролей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
    patch:
      summary: Изменение названия организации
      tags:
        - Organizations
      operationId: UpdateNameOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      
      parameters:
        - name: organization
          in: path
          required: true
          description: id организации
          schema:
            type: integer
            
      responses:
        '200':
          description: Название организации изменено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
                
        '422':
          description: Некорректное название
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntity"
    
    delete:
      summary: Удаление организации по id
      tags: 
        - Organizations
      
      operationId: DeleteOrganizationbyId
      
      parameters:
        - name: organization
          in: path
          required: true
          description: id организации
          schema:
            type: integer
            
      responses:
        '200':
          description: Организация удалена
                
        '404':
          description: Организация не найдена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
                
        '403':
          description: Пользователь не имеет конкретных ролей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorize"
                
  /api/invites/send: 
    post:
      summary: Отправить приглашение в организацию
      tags:
        - Invites
      operationId: SendInvite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invite"
      
      responses:
        '200':
          description: Приглашение отправлено
        '422':
          description: Ошибка валидации
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
          
  /api/invites/accept/{token}:
    get:  
      summary: Отправить приглашение в организацию
      tags:
      - Invites
      operationId: AcceptInvite
      parameters:
        - name: token
          in: path
          required: true
          description: Токен который находится в ссылке для приглашения
          schema:
            type: string
      responses:
        '200':
          description: Пользователь вступил в организацию
        '403':
          description: Недостаточно прав
  
  /api/projects:
    get: 
      summary: Получение проектов
      operationId: GetAllProjects
      parameters:
        - name: limit
          in: query
          required: true
          description: Количество проектов
          schema:
            type: integer
            example: 1
            
        - name: offset
          in: query
          required: true
          description: Игнорирование проектов
          schema:
            type: integer
            example: 1
            
      tags: 
        - Projects
      responses:
        '200':
          description: Успешный вывод всех проектов
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Projects"
                
    post:
      summary: Создание проекта
      operationId: CreateProject
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
    
      tags: 
        - Projects
      responses:
        '201':
          description: Проект создан
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        
        '422':
          description: Некорректное название или попытка изменить Id организации
          
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorize"
                
        '403':
          description: Пользователь не имеет конкретных ролей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
                
  /api/projects/find_by_organization/{organization}:
    get:
      summary: Поиск проекта по id организации
      tags: 
        - Projects
      
      operationId: GetProjectsbyOrganizationId
      
      parameters:
        - name: organization
          in: path
          required: true
          description: id организации
          schema:
            type: integer
            
      responses:
        '200':
          description: Получение проектов
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Projects"
                
        '404':
          description: Проекты не найдены
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
                
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorize"
                
        '403':
          description: Пользователь не имеет конкретных ролей или смотрит проекты чужой организации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
  
  /api/projects/{project}:
    get:
      summary: Поиск проекта по id
      tags: 
        - Projects
      
      operationId: GetProjectbyId
      
      parameters:
        - name: project
          in: path
          required: true
          description: id проекта
          schema:
            type: integer
            
      responses:
        '200':
          description: Получение проекта
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
                
        '404':
          description: Проект не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
                
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorize"
        '403':
          description: Пользователь не имеет конкретных ролей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
                
    patch:
      summary: Изменение названия проекта
      tags: 
        - Projects
      
      operationId: UpdateProjectbyId
      
      parameters:
        - name: project
          in: path
          required: true
          description: id проекта
          schema:
            type: integer
      
      requestBody:
        required: false
        description: Название проекта
        content:
          application/json:
            schema:
              type: string
            example:
              name: first project
            
      responses:
        '200':
          description: Проект изменен
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
                
        '404':
          description: Проект не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
                
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorize"
        '403':
          description: Пользователь не имеет конкретных ролей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
    
    delete: 
      summary: Удаление проекта
      tags: 
        - Projects
      
      operationId: DeleteProjectbyId
      
      parameters:
        - name: project
          in: path
          required: true
          description: id проекта
          schema:
            type: integer
            
      responses:
        '200':
          description: Проект удален
                
        '404':
          description: Проект не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
                
        '401':
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorize"
        '403':
          description: Пользователь не имеет конкретных ролей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
     
components: 
  schemas:
    User:
      type: object
      required:
        - name
        - email
        
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: denis
        email:
          type: string
          example: denis.le2001@mail.ru
        avatar:
          type: string
          example: public/avatars/zgskmYPxeL5CE0SF9d3AxNkOPjy2KW3lMyJqBENy.png
          
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
      example:
        - id: 1,
          name: denis
          email: denis123@mail.ru
          avatar: public/avatars/zgskmYPxeL5CE0SF9d3AxNkOPjy2KW3lMyJqBENy.png
          
        - id: 2
          name: sergey
          email: sergey123@gmail.com
          avatar: null
        
        - id: 3
          name: alina
          email: alina123@yandex.ru
          avatar: null
       
    Organization:
      type: object
      required:
        - id
        
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Nokia
       
    Organizations:
      type: array
      items:
        $ref: "#/components/schemas/Organization"
      example:
        - id: 1
          name: Nokia
        
        - id: 2
          name: Microsoft
    
    Project:
      type: object
      required:
        - id
        - organization_id
        
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: first project
        organization_id:
          type: integer
          example: 1
    
    Projects:
      type: array
      items:
        $ref: "#/components/schemas/Project"
      example:
        - id: 1
          name: first project
          organization_id: 1
        
        - id: 2
          name: second project
          organization_id: 2
      
    Invite:
      type: object
      required:
        - email
        - organizationId
      
      properties:
        
        email:
          type: string
          example: invitedUser@example.com
        organizationId:
          type: integer
          example: 4
        
    NotFound:    
      type: object
      
      properties:
        message: 
          type: string
          example: Not found
      
    UnprocessableEntity:
      type: object
      
      properties:
        message: 
          type: array
          items:
            type: array
            items:
              type: string
          example:
          - name: [The name field is required, The name must be at least 2 characters]
    
    AccessLogin:
      type: object
      
      properties:
        message:
          type: string
          example: Пользователь успешно авторизован
        id: 
          type: integer
          example: 7
        token:
          type: string
          example: 1|1gdsEDmjcD6n6FH9vMV7aVhDDtn8nGFJKk8qjQJI
        
    ResetPassword:
      type: object
      required:
            - email
            - token
            - password
            - confirm_password
      properties:
        email:
          type: string
          example: denisle@mail.ru
        token:
          type: string
          example: 86b7f816662e58966581091c52e92d5f88afd45bf268386a20c53eb92646a237
        password:
          type: string
          example: hard_pass
        confirm_password:
          type: string
          example: hard_pass
    
    Authorize:
      properties:
        message:
          type: string
          example: Unauthorized
          
    Forbidden:
      properties:
        message:
          type: string
          example: Forbidden
          
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      